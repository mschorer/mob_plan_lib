<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark"
						   xmlns:ns="de.ms_ite.mobile.topplan.components.*" open="handleOpen(event)"
						   creationComplete="initUI(event)" close="handleClose( event);" xmlns:ns1="de.ms_ite.mobile.topplan.filters.*">
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import de.ms_ite.maptech.Bounds;
			import de.ms_ite.mobile.topplan.events.TopEvent;
			
			import models.RetrievalParameters;
			import models.SignsLocation;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.PopUpEvent;
			
			protected var _pgSize:int = -1;
			protected var _error:String;
			
			protected function initUI(event:FlexEvent):void {
				PopUpManager.centerPopUp( this);
				
				if ( _pgSize != -1) lfc.pageSize = _pgSize;
				if ( _error != null) lfc.error = _error;
				
				lfc.addEventListener(Event.CHANGE, handleRelayout);
			}
			
			protected function handleRelayout( evt:Event):void {
				PopUpManager.centerPopUp( this);
				debug( "chg.");
			}

			protected function handleOpen(event:PopUpEvent):void {
				lfc.busy = false;
			}
/*			
			public function get pageSize():int {
				return lfc.pageSize;
			}
			
			public function get filterTagIDs():Array {
				return lfc.filterTagIDs;
			}
			
			public function get nameFilter():String {
				return lfc.nameFilter;
			}
*/			
			public function getFilter( loc:SignsLocation, view:Bounds, lon:Number, lat:Number):RetrievalParameters {
				return lfc.getFilter( loc, view, lon, lat);
			}
			
			public function preset( loc:SignsLocation):void {
				_pgSize = loc.pageSizeLocal;
				if ( lfc != null) lfc.pageSize = loc.pageSizeLocal;
			}
			
			public function set error( s:String):void {
				_error = s;
				if ( lfc != null) lfc.error = s;
			}
			
			protected function handleClose( evt:Event):void {
				debug( "close");
				close( true);
			}
			
			protected function submitData(event:Event):void {
				debug( "submit");
				close( true);
				callLater( sendComplete);
			}
			
			protected function sendComplete():void {
				dispatchEvent( new Event( Event.COMPLETE));
			}
			
			protected function debug( txt:String):void {
				trace( this.className+": "+txt);
			}
/*			
			protected function handleOpen(event:PopUpEvent):void {
				lfc.attachFilter();
			}
*/			
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<s:TitleWindow id="tw" title="Filter locations ..." width="100%" height="100%" close="handleClose(event)">
		<s:layout>
			<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="5"/>
		</s:layout>
		<ns1:LocationFilterComponent id="lfc" complete="submitData(event)" width="100%" height="100%"/>
	</s:TitleWindow>
</s:SkinnablePopUpContainer>
