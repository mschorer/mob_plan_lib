<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				><!-- click="itemClick(event)" contentBackgroundColor="#9E2828" -->
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
		<s:State name="hovered"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:DateTimeFormatter id="dFmt" dateTimePattern="dd. MMMM yyyy HH:mm:ss" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import models.SignsTag;
			
			import mx.events.FlexEvent;
			
			import spark.components.List;
			
			override public function set data( dest:Object):void {
				super.data = dest;
				
				//				trace( "  -- "+dest);
				
				if ( dest != 0 && dest != null) {
					//					presetCheckbox();
					var st:SignsTag = data as SignsTag;
					
					cbActive.label = st.name;
					if ( data.hasOwnProperty( 'col')) bcBack.setStyle( "backgroundColor", data.col);
					else  bcBack.setStyle( "backgroundColor", 0xe0e0e0);
				}
			}
			
			override public function get data():Object {
				return super.data;
			}	
			protected function ovrClick( evt:Event):void {
				//				debug( "toggle cb ["+cbActive.selected+":"+currentState+"]");
				cbActive.selected = (currentState == 'selected');
			}
			
			protected function debug( txt:String):void {
				trace( this.className+": "+txt);
			}
		]]>
	</fx:Script>
	<s:BorderContainer id="bcBack" width="100%" height="100%" cornerRadius="4"
					   dropShadowVisible="false"
					   backgroundColor.hovered="#A5E2A0"
					   backgroundColor.selected="#7ECC7A">
		<s:layout>
			<s:HorizontalLayout paddingBottom="2" paddingLeft="2" paddingRight="4" paddingTop="2"
								verticalAlign="middle"/>
		</s:layout>
		<s:CheckBox id="cbActive" selected.selected="true" selected="false" styleName="filterItem" change="ovrClick( event);"/>
		<!-- s:Label id="lName" width="100%" styleName="filterItem"/ -->
	</s:BorderContainer>
</s:ItemRenderer>
