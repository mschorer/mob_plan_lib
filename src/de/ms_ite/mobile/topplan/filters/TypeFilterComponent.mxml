<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:ns="de.ms_ite.mobile.topplan.components.*" 
		 xmlns:ns1="de.ms_ite.mobile.topplan.selectors.*" 
		 implements="de.ms_ite.mobile.topplan.filters.FilterSpec"
		 backgroundAlpha="0.6" borderWeight="1"
		 cornerRadius="5" horizontalCenter="0" verticalCenter="0"
		 creationComplete="initUI(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import de.ms_ite.mobile.topplan.AppSettings;
			
			import models.SignsProject;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.XMLListCollection;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.DropDownEvent;
			import spark.events.IndexChangeEvent;
			
			protected var _types:ArrayCollection = new ArrayCollection();
			
			protected function initUI(event:Event):void {
				findSelected();
			}
			
			public function active():Boolean {
				return ( lTypes.selectedItems != null && lTypes.selectedItems.length > 0);
			}
			
			public function reset():void {
				lTypes.selectedIndex = -1;
				lTypes.selectedItems = null;
				lTypes.validateDisplayList();
			}
			
			protected function getTypes():void {
				_types.removeAll();
				
				var tags:Array = new Array( "Rad", "MTB", "Wandern", "Wandern Alpin", "Wandern Tirol", "Winterwandern", "Loipe", "Leitsystem", "Variabel");

				var schilder:XMLList = AppSettings.itemTypeXML.(@data == "20").*;

				for( var i:int=0; i < tags.length; i++) {
					var tname:String = tags[ i];

					var tp:XMLList = schilder.(@name == tname);
					
//					_types.addItem( tp);
					
					for each( var sn:XML in tp.*) {
						if ( sn.@name != "---")	_types.addItem( sn);
					}
				}
			}
			
			public function get typeFilter():Array {
				return dataList( lTypes.selectedItems);
			}
			
			protected function dataList( sel:Vector.<Object>):Array {
				var res:Array = new Array();
				
				for each( var o:Object in sel) {
					res.push( parseInt( o.@data, 16));
					var sns:XMLList = o.*;
					for each( var sn:XML in sns) {
						res.push( parseInt( sn.@data, 16));
					}
				}
				
				return res;
			}
			
			protected function findSelected():void {
				
				if ( _types == null || _types.length == 0) getTypes();
			}
			
			protected function handleChange( event:Event):void {
				dispatchEvent( new Event( Event.CHANGE, true));
			}
			
			protected function debug( s:String):void {
				trace( this.className+": "+s);
			}						
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2"/>
	</s:layout>
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Label text="Typen filtern"/>
		<!-- s:Spacer width="100%"/>
		<s:Label text="aktuell"/>
		<s:ToggleSwitch id="tsLatestAction" selected="true" change="handleChange( event);"/ -->
	</s:HGroup>
	<s:List id="lTypes" allowMultipleSelection="true" itemRenderer="de.ms_ite.mobile.topplan.renderer.FilterTypeRenderer" labelField="name" width="100%" dataProvider="{_types}" change="handleChange( event);">
		<s:layout>
			<s:TileLayout orientation="rows" columnWidth="150" requestedColumnCount="5" requestedRowCount="5"/>
		</s:layout>
		<!-- s:itemRenderer>
			<fx:Component>
				<s:LabelItemRenderer styleName="projectItem" width="100%"/>
			</fx:Component>
		</s:itemRenderer -->
	</s:List>
</s:BorderContainer>